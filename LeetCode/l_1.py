# -*- coding: utf-8 -*-
"""L_1

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1QTJL4dlmNxiwlR333XY58zSGEUaxIMeK
"""

class Solution(object):
    def twoSum(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: List[int]
        """
        # left=0
        # right=len(nums)-1

        # while left < right:

        #     sum=nums[left]+nums[right]

        #     if sum == target:
        #         return left,right
        #         break
        #     elif sum < target:

        #         left+=1

        #     else:

        #         right-=1
        #The code upper will work only if the array is sorted

        dct = dict()

        for i in range(len(nums)):

            new_target  = target - nums[i]

            if new_target in dct:

                return dct[new_target],i
                break

            dct[nums[i]]=i
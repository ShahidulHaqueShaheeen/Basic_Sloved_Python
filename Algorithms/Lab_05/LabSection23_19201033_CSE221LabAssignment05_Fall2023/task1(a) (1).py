# -*- coding: utf-8 -*-
"""task1(a).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15HAIdkL4KT9rGVR_IKpK3eWYrI8qLdz3
"""

def topological(u):
    dfs_visited[u] = 1
    visited[u] = 1


    for v in adj_lst[u]:

        if dfs_visited[v] == 0:
            topological(v)

        if visited[v]:
            return True

    sequence.append(u)
    visited[u] = 0
    return False




input1_a = open("/content/input1(a).txt", 'r')
output1_a = open("/content/output1(a).txt", 'w')

node, pre_req = map(int, input1_a.readline().split())

adj_lst = [[] for i in range(node+1)]
for i in range(pre_req):
    a,b = map(int, input1_a.readline().split())
    adj_lst[a].append(b)


visited = [0]*(node+1)
dfs_visited = [0]*(node+1)

sequence = []

flag = False
for i in range(1, node+1):
    if dfs_visited[i] == 0:
        flag = topological(i)
        if flag:
            break

if flag:
    output1_a.write(f"Impossible")
else:
    for i in range(-1, -(node+1), -1):
        output1_a.write(f"{sequence[i]} ")

input1_a.close()
output1_a.close()
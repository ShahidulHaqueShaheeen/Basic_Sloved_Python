# -*- coding: utf-8 -*-
"""task_10.2

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1QTJL4dlmNxiwlR333XY58zSGEUaxIMeK
"""

import numpy as np

def calculate_gram_matrix(matrix):
    rows, cols = matrix.shape
    gram_matrix = np.empty((cols, cols), dtype=matrix.dtype)

    for i in range(cols):
        for j in range(cols):
            # Calculate the element at position (i, j) in the Gram matrix
            gram_matrix[i, j] = sum(matrix[k, i] * matrix[k, j] for k in range(rows))

    return gram_matrix

# Example usage (using the result from Subtask 10.1):
result1 = np.array([[1, 4, 7],
                   [2, 5, 8],
                   [3, 6, 9]])

result2 = np.array([[1, 1],
                   [2, 4],
                   [3, 9],
                   [4, 16]])

gram_matrix1 = calculate_gram_matrix(result1)
gram_matrix2 = calculate_gram_matrix(result2)

print("Gram Matrix for A1:")
print(gram_matrix1)

print("\nGram Matrix for A2:")
print(gram_matrix2)
# -*- coding: utf-8 -*-
"""Task_03.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1sRGxM9itgH14jeb4-cdcBGOE9mud9LuQ
"""

def count(a1, a2):
    global k
    j = 0

    merged_arr = []

    i = 0
    j = 0
    while i < len(a1) and j < len(a2):
        if a1[i] < a2[j]:
            merged_arr.append(a1[i])
            i += 1
        else:
            merged_arr.append(a2[j])
            k += len(a1) - i
            j += 1


    merged_arr += a1[i:]
    merged_arr += a2[j:]


    return merged_arr


def solution(arr):
    if len(arr) == 1:

        return arr


    mid = len(arr) // 2


    a1 = solution(arr[:mid])
    a2 = solution(arr[mid:])

    arr = count(a1, a2)

    return arr


input_3=open("/content/input3.txt","r")
output_3=open("/content/output3.txt","w")
k = 0

n = int(input_3.readline().strip())
arr = input_3.readline().split()
arr = [int(i) for i in arr]


x = solution(arr)

output_3.write(f"{k}")



input_3.close()
output_3.close()
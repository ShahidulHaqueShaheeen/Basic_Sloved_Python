# -*- coding: utf-8 -*-
"""task5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15HAIdkL4KT9rGVR_IKpK3eWYrI8qLdz3
"""

def bfs(u):
    visited[u] = 1
    travarsal.append(u)

    queue = []
    queue.append(u)

    while len(queue) != 0:
        frnt = queue[0]
        queue.pop(0)

        for v in adj_list[frnt]:
            if visited[v]:
                continue
            queue.append(v)
            visited[v] = 1
            parent[v] = frnt


input5 = open('/content/input5.txt', 'r')
output5 = open('/content/output5.txt','w')

node, edge, destination= map(int, input5.readline().split())

adj_list = [[] for i in range(node+1)]
visited = [0] * (node+1)
parent = [0] * (node+1)

for i in range(edge):
  u, v = map(int, input5.readline().split())
  adj_list[u].append(v)
  adj_list[v].append(u)


bfs(1)

path = []

while destination != 1:
  path.append(destination)
  destination = parent[destination]
path.append(1)
path.reverse()

output5.write(f"Time: {len(path)-1}\nShortest Path: ")
for v in path:
  output5.write(f"{v} ")


input5.close()
output5.close()